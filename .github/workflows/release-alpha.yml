name: Release to Alpha Channel
on: workflow_dispatch

# Add permissions for managing GH releases
permissions:
  contents: write

jobs:

  verify-release:
    name: Run Verification Steps
    outputs:
      version: ${{ steps.set_version.outputs.version }}
      draft-exists: ${{ steps.draft_release.outputs.exists }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Read version from gradle.properties
        id: set_version
        run: echo "version=`./gradlew -q getVersion`" > $GITHUB_OUTPUT
      - name: Check for existing draft ${{ steps.set_version.outputs.version }}
        id: draft_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "exists=$(gh release list --limit 100 --json name,tagName,isDraft | jq --arg TAG ${{ steps.set_version.outputs.version }} 'map(select(.isDraft == true and .tagName == $TAG)) | length > 0')" > $GITHUB_OUTPUT
      - name: Check for existing release ${{ steps.set_version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          exists=$(gh release list --limit 100 --json name,tagName,isDraft | jq --arg TAG ${{ steps.set_version.outputs.version }} 'map(select(.isDraft == false and .tagName == $TAG)) | length > 0')
          if $exists ; then
            echo "Release ${{ steps.set_version.outputs.version }} already exists, exiting"
            exit 1
          fi

  draft-release:
    name: Create draft release
    needs: [ verify-release, build-bundle, build-apk ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Draft Release
        if: ${{ needs.verify-release.outputs.draft-exists == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ needs.verify-release.outputs.version }}
        run: gh release create $TAG --draft -t "Release ${{ needs.verify-release.outputs.version }}"

      - name: Update release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ needs.verify-release.outputs.version }}
        run: gh release edit $TAG -F ${{ github.workspace }}/app/src/main/play/release-notes/en-US/default.txt
      - name: Download bundle and apk
        uses: actions/download-artifact@v4
        with:
          path: app-releases
          pattern: zimly-app-release.*
          merge-multiple: true
      - name: Upload .AAB and .APK to Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ needs.verify-release.outputs.version }}
        run: gh release upload --clobber $TAG ${GITHUB_WORKSPACE}/app-releases/zimly-app-release.aab ${GITHUB_WORKSPACE}/app-releases/zimly-app-release.apk

  build-bundle:
    name: Build Play Store Bundle
    runs-on: ubuntu-latest
    needs: [ verify-release ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Extract keystore
        # https://stackoverflow.com/a/25252900
        env:
          KEY_STORE_BASE64: ${{secrets.KEY_STORE_BASE64}}
        shell: bash
        run: echo "$KEY_STORE_BASE64" | base64 -d >> ${GITHUB_WORKSPACE}/keystore.jks
      - name: Patch applicationId for Play Store
        run: sed -i 's/applicationId = "app.zimly.backup"/applicationId = "io.zeitmaschine.zimzync"/g' app/build.gradle.kts
      - name: Publish to Play Store Alpha Track
        env:
          ANDROID_PUBLISHER_CREDENTIALS: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        run: ./gradlew publishBundle -Pandroid.injected.signing.store.file=${GITHUB_WORKSPACE}/keystore.jks -Pandroid.injected.signing.store.password='${{secrets.KEY_STORE_PASSWORD}}' -Pandroid.injected.signing.key.alias=${{secrets.KEY_ALIAS}} -Pandroid.injected.signing.key.password='${{secrets.KEY_PASSWORD}}'
      - run: mv app/build/outputs/bundle/release/app-release.aab zimly-app-release.aab
      - uses: actions/upload-artifact@v4
        with:
          name: zimly-app-release.aab
          path: zimly-app-release.aab

  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [ verify-release ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Extract keystore
        # https://stackoverflow.com/a/25252900
        env:
          KEY_STORE_BASE64: ${{secrets.KEY_STORE_BASE64}}
        shell: bash
        run: echo "$KEY_STORE_BASE64" | base64 -d >> ${GITHUB_WORKSPACE}/keystore.jks
      - name: Build and Sign APK Release
        # https://randombits.dev/articles/android/fdroid
        run: ./gradlew assembleRelease -Pandroid.injected.signing.store.file=${GITHUB_WORKSPACE}/keystore.jks -Pandroid.injected.signing.store.password='${{secrets.KEY_STORE_PASSWORD}}' -Pandroid.injected.signing.key.alias=${{secrets.KEY_ALIAS}} -Pandroid.injected.signing.key.password='${{secrets.KEY_PASSWORD}}'
      - run: mv app/build/outputs/apk/release/app-release.apk zimly-app-release.apk
      - uses: actions/upload-artifact@v4
        with:
          name: zimly-app-release.apk
          path: zimly-app-release.apk
