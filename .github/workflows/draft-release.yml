name: Draft Release
on: workflow_dispatch

jobs:

  draft-release:
    name: Create draft release
    outputs:
      tag: ${{ steps.set_version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Read version from gradle.properties
        id: set_version
        run: echo "version=`./gradlew -q getVersion`" >> $GITHUB_OUTPUT
      - name: Print version
        run: echo ${{ steps.set_version.outputs.version }}
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
        with:
          tag_name: ${{ steps.set_version.outputs.version }}
          release_name: Release ${{ steps.set_version.outputs.version }}
          body_path: ${{ github.workspace }}/release-notes/whatsnew-en-GB
          draft: true

  build-bundle:
    name: Build Play Store Bundle
    runs-on: ubuntu-latest
    needs: draft-release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Extract keystore
        # https://stackoverflow.com/a/25252900
        env:
          KEY_STORE_BASE64: ${{secrets.KEY_STORE_BASE64}}
        shell: bash
        run: echo "$KEY_STORE_BASE64" | base64 -d >> ${GITHUB_WORKSPACE}/keystore.jks
      - name: Patch applicationId for Play Store
        run: sed -i 's/applicationId = "app.zimly.backup"/applicationId = "io.zeitmaschine.zimzync"/g' app/build.gradle.kts
      - name: Build and sign Bundle release
        run: ./gradlew bundleRelease -Pandroid.injected.signing.store.file=${GITHUB_WORKSPACE}/keystore.jks -Pandroid.injected.signing.store.password='${{secrets.KEY_STORE_PASSWORD}}' -Pandroid.injected.signing.key.alias=${{secrets.KEY_ALIAS}} -Pandroid.injected.signing.key.password='${{secrets.KEY_PASSWORD}}'
      - name: Upload Bundle to Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
        run: gh release upload --clobber ${{ needs.draft-release.outputs.tag }} ${{ github.workspace }}/app/build/outputs/bundle/release/app-release.aab#zimly-app-release.aab
      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: io.zeitmaschine.zimzync
          releaseFiles: ${{ github.workspace }}/app/build/outputs/bundle/release/app-release.aab
          track: alpha
          whatsNewDirectory: release-notes


  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    needs: draft-release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Extract keystore
        # https://stackoverflow.com/a/25252900
        env:
          KEY_STORE_BASE64: ${{secrets.KEY_STORE_BASE64}}
        shell: bash
        run: echo "$KEY_STORE_BASE64" | base64 -d >> ${GITHUB_WORKSPACE}/keystore.jks
      - name: Build and Sign APK Release
        # https://randombits.dev/articles/android/fdroid
        run: ./gradlew assembleRelease -Pandroid.injected.signing.store.file=${GITHUB_WORKSPACE}/keystore.jks -Pandroid.injected.signing.store.password='${{secrets.KEY_STORE_PASSWORD}}' -Pandroid.injected.signing.key.alias=${{secrets.KEY_ALIAS}} -Pandroid.injected.signing.key.password='${{secrets.KEY_PASSWORD}}'
      - name: Upload APK to Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
        run: gh release upload --clobber ${{ needs.draft-release.outputs.tag }} ${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk#zimly-app-release.apk
